# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Push Images

on:
  push:
    branches: [ main, feature/create-push-images ]
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io

jobs:
  create-image-tag:
    runs-on: ubuntu-20.04
    outputs:
      image_tag: ${{ steps.get-image-tag-step.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: generate-tag
        run: sh ./.github/workflows/export-image-tag.sh
        shell: bash
      - id: get-image-tag-step
        run: echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  build-kingdom-image:
    runs-on: ubuntu-20.04
    needs: create-image-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: show-tag
        id: show-tag
        run: echo ${{ needs.create-image-tag.outputs.image_tag }}

  build-duchy-image:
    runs-on: ubuntu-20.04
    needs: create-image-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: show-tag
        id: show-tag
        run: echo ${{ needs.create-image-tag.outputs.image_tag }}